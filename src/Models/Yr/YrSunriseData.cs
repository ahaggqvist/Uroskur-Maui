// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Uroskur.Models.Yr;
//
//    var yrSunrise = YrSunrise.FromJson(jsonString);

namespace Uroskur.Models.Yr
{
    public partial class YrSunriseData
    {
        [JsonProperty("location", NullValueHandling = NullValueHandling.Ignore)]
        public Location Location { get; set; }

        [JsonProperty("meta", NullValueHandling = NullValueHandling.Ignore)]
        public Meta Meta { get; set; }
    }

    public partial class Location
    {
        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Height { get; set; }

        [JsonProperty("latitude", NullValueHandling = NullValueHandling.Ignore)]
        public string Latitude { get; set; }

        [JsonProperty("longitude", NullValueHandling = NullValueHandling.Ignore)]
        public string Longitude { get; set; }

        [JsonProperty("time", NullValueHandling = NullValueHandling.Ignore)]
        public List<Time> Time { get; set; }
    }

    public partial class Time
    {
        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Date { get; set; }

        [JsonProperty("high_moon", NullValueHandling = NullValueHandling.Ignore)]
        public HighMoon HighMoon { get; set; }

        [JsonProperty("low_moon", NullValueHandling = NullValueHandling.Ignore)]
        public HighMoon LowMoon { get; set; }

        [JsonProperty("moonphase", NullValueHandling = NullValueHandling.Ignore)]
        public Moonphase Moonphase { get; set; }

        [JsonProperty("moonposition", NullValueHandling = NullValueHandling.Ignore)]
        public Moonposition Moonposition { get; set; }

        [JsonProperty("moonrise", NullValueHandling = NullValueHandling.Ignore)]
        public Moonrise Moonrise { get; set; }

        [JsonProperty("moonset", NullValueHandling = NullValueHandling.Ignore)]
        public Moonrise Moonset { get; set; }

        [JsonProperty("moonshadow", NullValueHandling = NullValueHandling.Ignore)]
        public HighMoon Moonshadow { get; set; }

        [JsonProperty("solarmidnight", NullValueHandling = NullValueHandling.Ignore)]
        public HighMoon Solarmidnight { get; set; }

        [JsonProperty("solarnoon", NullValueHandling = NullValueHandling.Ignore)]
        public HighMoon Solarnoon { get; set; }

        [JsonProperty("sunrise", NullValueHandling = NullValueHandling.Ignore)]
        public Moonrise Sunrise { get; set; }

        [JsonProperty("sunset", NullValueHandling = NullValueHandling.Ignore)]
        public Moonrise Sunset { get; set; }
    }

    public partial class HighMoon
    {
        [JsonProperty("desc", NullValueHandling = NullValueHandling.Ignore)]
        public string Desc { get; set; }

        [JsonProperty("elevation", NullValueHandling = NullValueHandling.Ignore)]
        public string Elevation { get; set; }

        [JsonProperty("time", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Time { get; set; }

        [JsonProperty("azimuth", NullValueHandling = NullValueHandling.Ignore)]
        public string Azimuth { get; set; }
    }

    public partial class Moonphase
    {
        [JsonProperty("desc", NullValueHandling = NullValueHandling.Ignore)]
        public string Desc { get; set; }

        [JsonProperty("time", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Time { get; set; }

        [JsonProperty("value", NullValueHandling = NullValueHandling.Ignore)]
        public string Value { get; set; }
    }

    public partial class Moonposition
    {
        [JsonProperty("azimuth", NullValueHandling = NullValueHandling.Ignore)]
        public string Azimuth { get; set; }

        [JsonProperty("desc", NullValueHandling = NullValueHandling.Ignore)]
        public string Desc { get; set; }

        [JsonProperty("elevation", NullValueHandling = NullValueHandling.Ignore)]
        public string Elevation { get; set; }

        [JsonProperty("phase", NullValueHandling = NullValueHandling.Ignore)]
        public string Phase { get; set; }

        [JsonProperty("range", NullValueHandling = NullValueHandling.Ignore)]
        public string Range { get; set; }

        [JsonProperty("time", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Time { get; set; }
    }

    public partial class Moonrise
    {
        [JsonProperty("desc", NullValueHandling = NullValueHandling.Ignore)]
        public string Desc { get; set; }

        [JsonProperty("time", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Time { get; set; }
    }

    public partial class Meta
    {
        [JsonProperty("licenseurl", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Licenseurl { get; set; }
    }

    public partial class YrSunriseData
    {
        public static YrSunriseData FromJson(string json) => JsonConvert.DeserializeObject<YrSunriseData>(json, Uroskur.Models.Yr.Converter.Settings);
    }
}
